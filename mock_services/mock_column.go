// Code generated by MockGen. DO NOT EDIT.
// Source: services/column.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/ortymid/projector/models"
	reflect "reflect"
)

// MockColumnRepo is a mock of ColumnRepo interface
type MockColumnRepo struct {
	ctrl     *gomock.Controller
	recorder *MockColumnRepoMockRecorder
}

// MockColumnRepoMockRecorder is the mock recorder for MockColumnRepo
type MockColumnRepoMockRecorder struct {
	mock *MockColumnRepo
}

// NewMockColumnRepo creates a new mock instance
func NewMockColumnRepo(ctrl *gomock.Controller) *MockColumnRepo {
	mock := &MockColumnRepo{ctrl: ctrl}
	mock.recorder = &MockColumnRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockColumnRepo) EXPECT() *MockColumnRepoMockRecorder {
	return m.recorder
}

// AllByBoard mocks base method
func (m *MockColumnRepo) AllByBoard(arg0 context.Context, arg1 models.Board) ([]models.Column, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllByBoard", arg0, arg1)
	ret0, _ := ret[0].([]models.Column)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllByBoard indicates an expected call of AllByBoard
func (mr *MockColumnRepoMockRecorder) AllByBoard(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllByBoard", reflect.TypeOf((*MockColumnRepo)(nil).AllByBoard), arg0, arg1)
}

// Create mocks base method
func (m *MockColumnRepo) Create(arg0 context.Context, arg1 models.Board, arg2 models.Column) (models.Column, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(models.Column)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockColumnRepoMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockColumnRepo)(nil).Create), arg0, arg1, arg2)
}
